---
import OpenGraphArticleTags from "./og-article-tag.astro";
import OpenGraphBasicTags from "./og-basic-tag.astro";
import OpenGraphImageTags from "./og-image-tag.astro";
import OpenGraphOptionalTags from "./og-optional-tag.astro";
import TwitterTags from "./twitter-tag.astro";
import LanguageAlternatesTags from "./language-alternates-tag.astro";
import { type SeoProps } from "../../types/seo";

interface Props extends SeoProps {}

Astro.props.surpressWarnings = true;

function validateProps(props: Props) {
  if (props.openGraph) {
    if (
      !props.openGraph.basic ||
      (props.openGraph.basic.title ?? undefined) == undefined ||
      (props.openGraph.basic.type ?? undefined) == undefined ||
      (props.openGraph.basic.image ?? undefined) == undefined
    ) {
      throw new Error(
        "If you pass the openGraph prop, you have to at least define the title, type, and image basic properties!"
      );
    }
  }

  if (props.title && props.openGraph?.basic.title) {
    if (props.title == props.openGraph.basic.title && !props.surpressWarnings) {
      console.warn(
        "WARNING(astro-seo): You passed the same value to `title` and `openGraph.optional.title`. This is most likely not what you want. See docs for more."
      );
    }
  }

  if (props.openGraph?.basic?.image && !props.openGraph?.image?.alt && !props.surpressWarnings) {
    console.warn(
      "WARNING(astro-seo): You defined `openGraph.basic.image`, but didn't define `openGraph.image.alt`. This is strongly discouraged.'"
    );
  }
}

validateProps(Astro.props);

let updatedTitle = "";

if (Astro.props.title) {
  updatedTitle = Astro.props.title;
  if (Astro.props.titleTemplate) {
    updatedTitle = Astro.props.titleTemplate.replace(/%s/g, updatedTitle);
  }
} else if (Astro.props.titleDefault) {
  updatedTitle = Astro.props.titleDefault;
}

const baseUrl = Astro.site ?? Astro.url;
const defaultCanonicalUrl = new URL(Astro.url.pathname + Astro.url.search, baseUrl);
---

{updatedTitle ? <title set:html={updatedTitle} /> : null}

{Astro.props.charset ? <meta charset={Astro.props.charset} /> : null}

<link rel="canonical" href={Astro.props.canonical || defaultCanonicalUrl.href} />

{Astro.props.description ? <meta name="description" content={Astro.props.description} /> : null}

<meta
  name="robots"
  content={`${Astro.props.noindex ? "noindex" : "index"}, ${Astro.props.nofollow ? "nofollow" : "follow"}`}
/>

{Astro.props.openGraph && <OpenGraphBasicTags {...Astro.props} />}
{Astro.props.openGraph?.optional && <OpenGraphOptionalTags {...Astro.props} />}
{Astro.props.openGraph?.image && <OpenGraphImageTags {...Astro.props} />}
{Astro.props.openGraph?.article && <OpenGraphArticleTags {...Astro.props} />}
{Astro.props.twitter && <TwitterTags {...Astro.props} />}
{Astro.props.languageAlternates && <LanguageAlternatesTags {...Astro.props} />}
